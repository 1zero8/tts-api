version: '3.7'

services:
  caddy:
    image: ${IMAGE_NAME:-productionwentdown/caddy}:${IMAGE_TAG:-1.0.3}
    environment:
      CADDY_PORT:
      CONTAINER_NAME:
      PORT:
    networks:
      tts-api-net:
      traefik-net:
    configs:
      - source: caddyfile-config
        target: /etc/Caddyfile
    volumes:
      - work-vol:/etc/.caddy
    deploy:
      mode: replicated
      replicas: ${REPLICAS:-1}
      restart_policy:
        delay: ${RESTART_DELAY:-3s}
      update_config:
        delay: ${UPDATE_DELAY:-1m}
      labels:
        traefik.http.routers.tts-api.entrypoints: ${TRAEFIK_ENTRYPOINT:-https}
        traefik.http.routers.tts-api.tls.certresolver: ${TRAEFIK_CERTRESOLVER:-default}
        traefik.http.routers.tts-api.rule: Host(`${TRAEFIK_SUBDOMAIN:-tts}.${TRAEFIK_DOMAIN}`)
        traefik.http.services.tts-api.loadbalancer.server.port: ${CADDY_PORT}
      resources:
        limits:
          cpus: '${RESOURCES_LIMITS_CPUS:-0.1}'
          memory: ${RESOURCES_LIMITS_MEMORY:-32M}
        reservations:
          cpus: '${RESOURCES_RESERVATIONS_CPUS:-0.001}'
          memory: ${RESOURCES_RESERVATIONS_MEMORY:-8M}

networks:
  tts-api-net:
    name: ${TTS_API_NET_NAME}
    driver: ${TTS_API_NET_DRIVER}
    attachable: true

  traefik-net:
    name: ${TRAEFIK_NET_NAME:-traefik-net}
    external: true

configs:
  caddyfile-config:
    name: ${CADDYFILE_CONFIG_NAME:-tts-api-caddyfile}
    file: ./config/Caddyfile

volumes:
  work-vol:
    name: ${WORK_VOL_NAME:-tts-api-work-vol}
